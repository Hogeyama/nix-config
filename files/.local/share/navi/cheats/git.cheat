% git

# informative log (graph)
git log --pretty=format:"%C(yellow)%h%Creset %C(green)%ad%Creset %s %Cred%d%Creset %Cblue[%an]" --date=short --graph

# add worktree
git worktree add -B {,,<remote>/}<remote-branch-no-prefix>

# squash/fixup automatically
GIT_SEQUENCE_EDITOR=: git rebase --autosquash -i <commit>

# commit and fixup
git commit --fixup=<commit> && GIT_SEQUENCE_EDITOR=: git rebase --autosquash -i <commit>^

# commit all and fixup
git commit -a --fixup=<commit> && GIT_SEQUENCE_EDITOR=: git rebase --autosquash -i <commit>^

$ commit:                  git log --oneline --- --column 1 --delimiter '\s+'
$ remote:                  git remote show
$ remote-branch:           git branch -r | sed -e 's/\(.*->\)//' -e 's/^\s*//'
$ remote-branch-no-prefix: git branch -r | sed -e 's/\(.*->\)//' -e 's/^[^\/]*\///'
